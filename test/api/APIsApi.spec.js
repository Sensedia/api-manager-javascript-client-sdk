/**
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiManagerPortal);
  }
}(this, function(expect, ApiManagerPortal) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiManagerPortal.APIsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIsApi', function() {
    describe('cloneApiUsingPOST1', function() {
      it('should call cloneApiUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test cloneApiUsingPOST1
        //instance.cloneApiUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAPIUsingPOST1', function() {
      it('should call createAPIUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test createAPIUsingPOST1
        //instance.createAPIUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAPIUsingDELETE1', function() {
      it('should call deleteAPIUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test deleteAPIUsingDELETE1
        //instance.deleteAPIUsingDELETE1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findLastRevisionUsingGET1', function() {
      it('should call findLastRevisionUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test findLastRevisionUsingGET1
        //instance.findLastRevisionUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findVersionsByAPIUsingGET1', function() {
      it('should call findVersionsByAPIUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test findVersionsByAPIUsingGET1
        //instance.findVersionsByAPIUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIByIdUsingGET1', function() {
      it('should call getAPIByIdUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getAPIByIdUsingGET1
        //instance.getAPIByIdUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIChangeLogUsingGET1', function() {
      it('should call getAPIChangeLogUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getAPIChangeLogUsingGET1
        //instance.getAPIChangeLogUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIsUsingGET1', function() {
      it('should call getAPIsUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getAPIsUsingGET1
        //instance.getAPIsUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('newVersionAPIUsingPOST1', function() {
      it('should call newVersionAPIUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test newVersionAPIUsingPOST1
        //instance.newVersionAPIUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeEnvironmentUsingDELETE1', function() {
      it('should call removeEnvironmentUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test removeEnvironmentUsingDELETE1
        //instance.removeEnvironmentUsingDELETE1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAPIUsingPUT1', function() {
      it('should call updateAPIUsingPUT1 successfully', function(done) {
        //uncomment below and update the code to test updateAPIUsingPUT1
        //instance.updateAPIUsingPUT1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validatePartialAPIUsingPOST1', function() {
      it('should call validatePartialAPIUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test validatePartialAPIUsingPOST1
        //instance.validatePartialAPIUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
