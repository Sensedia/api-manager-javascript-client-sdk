/**
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RoleBean', 'model/TeamBean'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RoleBean'), require('./TeamBean'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiManagerPortal) {
      root.ApiManagerPortal = {};
    }
    root.ApiManagerPortal.UserBean = factory(root.ApiManagerPortal.ApiClient, root.ApiManagerPortal.RoleBean, root.ApiManagerPortal.TeamBean);
  }
}(this, function(ApiClient, RoleBean, TeamBean) {
  'use strict';




  /**
   * The UserBean model module.
   * @module model/UserBean
   * @version 2.0
   */

  /**
   * Constructs a new <code>UserBean</code>.
   * @alias module:model/UserBean
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>UserBean</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserBean} obj Optional instance to populate.
   * @return {module:model/UserBean} The populated <code>UserBean</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('hasAllPermissions')) {
        obj['hasAllPermissions'] = ApiClient.convertToType(data['hasAllPermissions'], 'Boolean');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = ApiClient.convertToType(data['image'], 'String');
      }
      if (data.hasOwnProperty('login')) {
        obj['login'] = ApiClient.convertToType(data['login'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
      if (data.hasOwnProperty('passwordConfirm')) {
        obj['passwordConfirm'] = ApiClient.convertToType(data['passwordConfirm'], 'String');
      }
      if (data.hasOwnProperty('roles')) {
        obj['roles'] = ApiClient.convertToType(data['roles'], [RoleBean]);
      }
      if (data.hasOwnProperty('teamUserId')) {
        obj['teamUserId'] = ApiClient.convertToType(data['teamUserId'], 'Number');
      }
      if (data.hasOwnProperty('teams')) {
        obj['teams'] = ApiClient.convertToType(data['teams'], [TeamBean]);
      }
      if (data.hasOwnProperty('userType')) {
        obj['userType'] = ApiClient.convertToType(data['userType'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * @member {Boolean} hasAllPermissions
   */
  exports.prototype['hasAllPermissions'] = undefined;
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} image
   */
  exports.prototype['image'] = undefined;
  /**
   * @member {String} login
   */
  exports.prototype['login'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} password
   */
  exports.prototype['password'] = undefined;
  /**
   * @member {String} passwordConfirm
   */
  exports.prototype['passwordConfirm'] = undefined;
  /**
   * @member {Array.<module:model/RoleBean>} roles
   */
  exports.prototype['roles'] = undefined;
  /**
   * @member {Number} teamUserId
   */
  exports.prototype['teamUserId'] = undefined;
  /**
   * @member {Array.<module:model/TeamBean>} teams
   */
  exports.prototype['teams'] = undefined;
  /**
   * @member {module:model/UserBean.UserTypeEnum} userType
   */
  exports.prototype['userType'] = undefined;


  /**
   * Allowed values for the <code>userType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UserTypeEnum = {
    /**
     * value: "DATABASE"
     * @const
     */
    "DATABASE": "DATABASE",
    /**
     * value: "LDAP"
     * @const
     */
    "LDAP": "LDAP"  };


  return exports;
}));


